name: Code Push

on:
  - push
  - pull_request

jobs:
  change_files:
    runs-on: ubuntu-latest
    outputs:
      dockerChange: ${{ steps.docker-changed-files.outputs.any_changed }}
      qinglongChange: ${{ steps.qinglong-changed-files.outputs.any_changed }}
      monkeyChange: ${{ steps.monkey-changed-files.outputs.any_changed }}
      readmeChange: ${{ steps.readme-changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - id: qinglong-changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            src/qinglong/**
            etc/**
            !etc/build/readme*
            packages/**
            package*.json
            tsconfig.json
      - name: List all changed files
        if: steps.qinglong-changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.qinglong-changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
      - id: monkey-changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            src/monkey/**
            etc/**
            !etc/build/readme*
            packages/**
            package*.json
            tsconfig.json
      - name: List all changed files
        if: steps.monkey-changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.monkey-changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
      - id: docker-changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            src/docker/**
      - name: List all changed files
        if: steps.docker-changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.docker-changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
      - id: readme-changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            etc/build/readme*
            src/**/README.md
            !src/docker/**
      - name: List all changed files
        if: steps.readme-changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.readme-changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
  code_check:
    runs-on: ubuntu-latest
    needs:
      - change_files
    if: needs.change_files.outputs.qinglongChange == 'true' || needs.change_files.outputs.monkeyChange == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: TS Type Check
        run: npm run lint:type-check
      - name: unit test
        run: npm run test
  monkey_actions:
    needs:
      - change_files
      - code_check
    if: needs.change_files.outputs.monkeyChange == 'true'
    permissions:
      contents: write
    uses: ./.github/workflows/monkey_push.yml
  qinglong_actions:
    needs:
      - change_files
      - code_check
    if: needs.change_files.outputs.qinglongChange == 'true'
    permissions:
      contents: write
    uses: ./.github/workflows/qinglong_push.yml
  docker_actions:
    needs:
      - change_files
    if: needs.change_files.outputs.dockerChange == 'true'
    uses: ./.github/workflows/docker_push.yml
    with:
      DOCKER_HUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
    secrets:
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  readme-push:
    runs-on: ubuntu-latest
    needs:
      - change_files
      - monkey_actions
      - qinglong_actions
    if: always() && needs.change_files.outputs.readmeChange == 'true' && (contains(fromJson('["success", "skipped"]'), needs.monkey_actions.result) || contains(fromJson('["success", "skipped"]'), needs.qinglong_actions.result))
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Generate Readme files
        run: npm run build:readme
      - name: Deploy Readme files
        if: github.event_name == 'push' && github.ref_name == github.event.repository.default_branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: .
          branch: ${{ github.event.repository.default_branch }}
          commit-message: 'chore: update README.md'
